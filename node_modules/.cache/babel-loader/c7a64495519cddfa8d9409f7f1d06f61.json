{"ast":null,"code":"var _jsxFileName = \"/Users/areefeen/Desktop/Univ-Elearning-Project/front-end/src/components/Navbar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../css/Navbar.css';\nimport logo from './images/logo.png';\nimport ModalSignin from './ModalSignin';\nimport Register from './Register';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Navbar() {\n  _s();\n\n  // setting mobile new\n  const [click, setClick] = useState(false);\n\n  const handleClick = () => setClick(!click);\n\n  const closeMobileMenu = () => setClick(false); // setting Modal\n\n\n  const [modalOpen, setModalOpen] = useState(false);\n  const [modalOpenLogin, setModalOpenLogin] = useState(false);\n  console.log(click); // change nav color when scrolling\n\n  const [color, setColor] = useState(false);\n\n  const changeColor = () => {\n    if (window.scrollY >= 80) {\n      setColor(true);\n    } else {\n      setColor(false);\n    }\n  };\n\n  window.addEventListener('scroll', changeColor);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: color ? 'navbar navbar-bg' : 'navbar',\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar-container\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          className: \"navbar-logo\",\n          onClick: closeMobileMenu,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: logo,\n            alt: \"logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"menu-icon\",\n          onClick: handleClick,\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: click ? 'fas fa-times' : 'fas fa-bars'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: click ? 'nav-menu active' : 'nav-menu',\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"nav-item\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              className: \"nav-links\",\n              onClick: closeMobileMenu,\n              children: \"Home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"nav-item\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/category\",\n              className: \"nav-links\",\n              onClick: closeMobileMenu,\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"nav-item\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/about\",\n              className: \"nav-links\",\n              onClick: closeMobileMenu,\n              children: \"About\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"nav-item\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              className: \"nav-links\",\n              onClick: () => {\n                setModalOpenLogin(true);\n              },\n              children: \"Sign in\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"nav-item\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              className: \"nav-links\",\n              onClick: () => {\n                setModalOpen(true);\n              },\n              children: \"Sign up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), modalOpen && /*#__PURE__*/_jsxDEV(Register, {\n          setOpenModal: setModalOpen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 23\n        }, this), modalOpenLogin && /*#__PURE__*/_jsxDEV(ModalSignin, {\n          setOpenModalLogin: setModalOpenLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Navbar, \"MOt1oWCf2FjmCJOopI9SjMPZJcc=\");\n\n_c = Navbar;\nexport default Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["/Users/areefeen/Desktop/Univ-Elearning-Project/front-end/src/components/Navbar.js"],"names":["React","useState","Link","logo","ModalSignin","Register","Navbar","click","setClick","handleClick","closeMobileMenu","modalOpen","setModalOpen","modalOpenLogin","setModalOpenLogin","console","log","color","setColor","changeColor","window","scrollY","addEventListener"],"mappings":"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","sourcesContent":["import React, { useState} from 'react';\nimport { Link } from 'react-router-dom';\nimport '../css/Navbar.css';\nimport logo from './images/logo.png'\nimport ModalSignin from './ModalSignin';\nimport Register from './Register';\n\nfunction Navbar() {\n    // setting mobile new\n    const [click, setClick] = useState(false)\n    const handleClick = () => setClick(!click)\n    const closeMobileMenu = () => setClick(false);\n\n    // setting Modal\n    const [modalOpen, setModalOpen] = useState(false);\n    const [modalOpenLogin, setModalOpenLogin] = useState(false);\n    console.log(click);\n\n\n    // change nav color when scrolling\n    const [color, setColor] = useState(false);\n    const changeColor = () => {\n        if(window.scrollY >= 80) {\n            setColor(true);\n        } else {\n            setColor(false);\n        }\n    };\n    window.addEventListener('scroll', changeColor);\n\n  return (\n    <>\n      <nav className={color ? 'navbar navbar-bg' : 'navbar'}>\n        <div className='navbar-container'>\n          <Link to='/' className='navbar-logo' onClick={closeMobileMenu}>\n            <img src={logo} alt='logo' />\n          </Link>\n          <div className='menu-icon' onClick={handleClick}>\n            <i className={click ? 'fas fa-times' : 'fas fa-bars'} />\n          </div>\n          <ul className={click ? 'nav-menu active' : 'nav-menu'}>\n            <li className='nav-item'>\n              <Link to='/' className='nav-links' onClick={closeMobileMenu}>\n                Home\n              </Link>\n            </li>\n            <li className='nav-item'>\n              <Link\n                to='/category'\n                className='nav-links'\n                onClick={closeMobileMenu}\n              >\n                Category\n              </Link>\n            </li>\n\n            <li className='nav-item'>\n              <Link\n                to='/about'\n                className='nav-links'\n                onClick={closeMobileMenu}\n              >\n                About\n              </Link>\n            </li>\n\n            <li className='nav-item'>\n                <Link className='nav-links'\n                    onClick={() => {\n                        setModalOpenLogin(true);\n                    }}>\n                    Sign in\n                </Link> \n            </li>\n\n            <li className='nav-item'>\n\n                <Link className='nav-links'\n                    onClick={() => {\n                        setModalOpen(true);\n                    }}>\n                    Sign up\n                </Link>\n\n            </li>\n    \n        </ul>\n\n        {modalOpen && <Register setOpenModal={setModalOpen} />}\n        {modalOpenLogin && <ModalSignin  setOpenModalLogin={setModalOpenLogin} />}\n          \n        </div>\n      </nav>\n    </>\n  );\n}\n\nexport default Navbar;\n"]},"metadata":{},"sourceType":"module"}